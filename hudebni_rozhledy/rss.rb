#!/usr/bin/ruby

# unofficial RSS feed for hudebnirozhledy.scena.cz
require 'uri'
require 'typhoeus'

require 'nokogiri'
require 'nyny'

require_relative '../lib/articles_rss'

module HudebniRozhledy
  # knows how to find latest articles
  class HudebniRozhledyLatestArticles
    def initialize(uri, document)
      @uri = uri
      @doc = document
    end

    def self.create_articles
      uri = URI('http://hudebnirozhledy.scena.cz')
      response = Typhoeus.get uri, followlocation: true
      doc = Nokogiri::HTML response.body

      articles = new uri.to_s + '/www/', doc
    end

    def each
      article_nodes.each do |article|
        yield ArticlesRSS::Article.new(
                link(article),
                title(article),
                published_at(article),
                description(article)
              )
      end
    end

    def article_nodes
      @doc.css '#left-col .article'
    end

    def link(article)
      href = article.css('h2 a')[0]['href']
      if href.start_with? 'http'
        href
      else
        URI.join @uri, href
      end
    end

    def title(article)
      article.css('h2')[0].text.strip
    end

    def published_at(article)
      month, year = article.css('p.meta a')[0].text.split '/'
      month = month.to_i
      year = year.to_i
      year += 2000 if year < 100
      Time.new(year, month, 1) # day of publication unknown
    end

    def description(article)
      article.css('p.meta + p')[0].text.strip
    end
  end

  class App < NYNY::Base
    get '/rss' do
      headers['Content-Type'] = ArticlesRSS::RSS_CONTENT_TYPE
      ArticlesRSS.build HudebniRozhledyLatestArticles.create_articles,
                        feed_uri: request.url,
                        title: 'hudebnirozhledy.scena.cz unofficial rss feed',
                        description: 'Feed is generated by an independent application'
    end
  end
end
